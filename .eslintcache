[{"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\index.tsx":"1","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\App.tsx":"2","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\logo.tsx":"3","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\filters.tsx":"4","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\recipies.tsx":"5","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\footer.tsx":"6","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\filterBtn.tsx":"7","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\recipieblock.tsx":"8","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\utils\\recipies.ts":"9","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\models\\recipieType.enum.ts":"10","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\models\\unit.enum.ts":"11"},{"size":500,"mtime":1609509225674,"results":"12","hashOfConfig":"13"},{"size":465,"mtime":1609626539298,"results":"14","hashOfConfig":"13"},{"size":299,"mtime":1609626509116,"results":"15","hashOfConfig":"13"},{"size":424,"mtime":1609626545589,"results":"16","hashOfConfig":"13"},{"size":518,"mtime":1609626487355,"results":"17","hashOfConfig":"13"},{"size":501,"mtime":1609626518031,"results":"18","hashOfConfig":"13"},{"size":551,"mtime":1609681616671,"results":"19","hashOfConfig":"13"},{"size":2054,"mtime":1610222057104,"results":"20","hashOfConfig":"13"},{"size":49209,"mtime":1610217764473,"results":"21","hashOfConfig":"13"},{"size":304,"mtime":1609692119005,"results":"22","hashOfConfig":"13"},{"size":215,"mtime":1609692877890,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"b88q5b",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\index.tsx",[],[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\App.tsx",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\logo.tsx",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\filters.tsx",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\recipies.tsx",["49"],"import React, { useState } from 'react';\nimport { Recipie } from '../models/recipie.model';\nimport { recipies } from '../utils/recipies';\nimport RecipieBlock from './recipieblock';\nimport '../styles/recipies.scss';\n\nconst Recipies = (): JSX.Element => {\n  const [shownRecipies, setShownRecipies] = useState<Recipie[]>(recipies);\n  return (\n    <div className=\"recipies\">\n      {shownRecipies.map((recipie: Recipie) => (\n        <RecipieBlock recipie={recipie} />\n      ))}\n    </div>\n  );\n};\n\nexport default Recipies;\n","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\footer.tsx",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\filterBtn.tsx",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\components\\recipieblock.tsx",["50"],"import React, { useState } from 'react';\nimport { Recipie } from '../models/recipie.model';\nimport { RecipieType } from '../models/recipieType.enum';\nimport { Ingredient } from '../models/ingredient.model';\n\ninterface Props {\n  recipie: Recipie;\n}\n\nconst ingredientsList = (ingredients: Ingredient[]): JSX.Element => {\n  const formattedIngredient = (ingredient: Ingredient): string => {\n    return `${ingredient.volum > 0 ? ingredient.volum : ''} ${\n      ingredient.unit\n    } ${ingredient.ingredientName}`;\n  };\n\n  return (\n    <div className=\"recipie-ingredients\">\n      <span>{`Ingredienser`}</span>\n      <ol>\n        {ingredients.map((ingredient: Ingredient) => (\n          <li>{formattedIngredient(ingredient)}</li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nconst procedureList = (procedure: string[]): JSX.Element => {\n  console.log('procedure: ', procedure);\n  return (\n    <div className=\"recipie-procedure\">\n      <span>{`Fremgangsm√•te`}</span>\n      <ol>\n        {procedure.map((step: string) => (\n          <li>{step}</li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nconst recipieTypeString = (recipieTypes: RecipieType[]): JSX.Element => {\n  return (\n    <span className=\"recipie-types\">\n      {recipieTypes.map(\n        (type: RecipieType, i: number) =>\n          ` ${type}${i < recipieTypes.length - 1 ? ',' : ''}`\n      )}\n    </span>\n  );\n};\n\nconst RecipieBlock = ({ recipie }: Props): JSX.Element => {\n  const [visibility, setVisiblity] = useState<boolean>(false);\n  const recipieName = (recipie: Recipie): JSX.Element => {\n    return <span className=\"recipie-name\">{recipie.title}</span>;\n  };\n  return (\n    <div className=\"recipie-block\">\n      <div className=\"recipie-title\" onClick={() => setVisiblity(!visibility)}>\n        {recipieName(recipie)}\n        {recipieTypeString(recipie.types)}\n      </div>\n      <div className={`recipie-content ${visibility ? '' : 'close'}`}>\n        {ingredientsList(recipie.ingredients)}\n        {procedureList(recipie.procedure)}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipieBlock;\n","C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\utils\\recipies.ts",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\models\\recipieType.enum.ts",[],"C:\\Users\\mmelh\\Documents\\Repos\\superkokkeneskokebok2\\src\\models\\unit.enum.ts",[],{"ruleId":"51","severity":1,"message":"52","line":8,"column":25,"nodeType":"53","messageId":"54","endLine":8,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":30,"column":3,"nodeType":"57","messageId":"58","endLine":30,"endColumn":14},"@typescript-eslint/no-unused-vars","'setShownRecipies' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected"]